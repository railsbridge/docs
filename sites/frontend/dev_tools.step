goals do
  goal "Get oriented with your browser's dev tools. They're a great jumping-off point for continuing to build your HTML, CSS, and JavaScript knowledge."
  tip "The screenshots below are specific to the Chrome web browser, which is available for Mac and PC and has great developer tools. But if you're partial to another browser, there's usually a similar set of tools you can use, either built in (Internet Explorer 9, Safari) or installable with plugins (FireFox)."
end

steps do
  
  step do
    message "First, you've got to turn on your dev tools. They're hidden by default."
    message "<img src='img/devtools.png'>"
    message "In Chrome, you can do this by clicking _View > Developer > Developer Tools_."
  end
  
  step do
    message "Click on the 'Elements' button to check out your HTML."
    message "<img src='img/devtools_elements.png'>"
    message "Clicking on an HTML tag in the elements panel will highlight that element in the browser window. It's a great tool for debugging styling problems. On the right side of the panel, you'll even get a list of styles that are being applied to that element."
    tip "Chrome's Elements panel will update to match the state of your DOM as you modify it with JavaScript. Some elements panels don't do this &mdash; they just show what the HTML looked like on page load."
  end

  step do
    message "In the 'Network' panel, you can see what other files and resources your HTML page is loading."
    message "<img src='img/devtools_network.png'>"
    message "If you click on a file name, you can take a look at the contents of that file. This panel is a great place for debugging script linking or loading issues. (You can see HTTP headers and request params here too, with a little digging.)"
  end

  step do
    message "The 'Console' is the JavaScript developer's secret weapon. It lets you run JavaScript by typing it in directly &mdash; and it runs your scripts _in the context of your page_, so you can interact directly with objects and functions you've defined. It's helpful for debugging and experimenting."
    message "<img src='img/devtools_console.png'>"
  end
  
  step do
    message "The 'Script' panel is another JavaScript pro tool. If you're used to working with an IDE that has a debugger, you'll be able to use many of the same techniques (like breakpoints, stack traces, and watch expressions) right here in the browser."
    message "<img src='img/devtools_script.png'>"
  end
end
  
explanation do

  message <<-MARKDOWN

## Keep Learning with Dev Tools

With good browser dev tools, you can pick apart every website you visit. If you see cool
CSS styles or JavaScript animations, you can always look under the hood and figure out how
they're done. It's a great way to keep learning as a front end developer.

## Quick References
* [HTML](html_quick_reference)

## Resources for Later

* [Mozilla Developer Network](https://developer.mozilla.org) is probably the largest, most comprehensive source of front end documentation.
* [Dochub](http://dochub.io/) is another comprehensive resource.
* [A List Apart](http://www.alistapart.com/) is an online magazine with great content on front end best practices.
* [Smashing Magazine](http://www.smashingmagazine.com/) is oriented toward web designers, but they frequently have good, short how-to articles on CSS and JavaScript coding. 
* [HTML5 Rocks](http://www.html5rocks.com/) is a great site for keeping up on the latest advancements in front end techniques and technology.
* Some Railsbridge folks maintain a [Pinterest board on Front End resources](http://pinterest.com/eanakashima/learn-the-front-end/)
* For more tips on working with Chrome dev tools, check out this [video intro from Paul Irish](http://paulirish.com/2011/a-re-introduction-to-the-chrome-developer-tools/)
* [Design Resources](https://kippt.com/jessicaspacekat/design-resources) - A kippt list created by [@jessicaspacekat](https://twitter.com/jessicaspacekat) of design resources for Rails Girls.


  MARKDOWN
  
end
