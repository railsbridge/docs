goals do
  goal "Be able to use the basic building blocks of Ruby code"
  goal "Use IRB to run Ruby code"
  goal "Do simple calculations"
  goal "Use and understand variables"
  goal "Use and understand arrays"
  goal "Use loops and conditional statements"
end

steps do
  step do
    message "Type this in the terminal to start the Interactive Ruby Shell, a program which lets you experiment with Ruby code:"

    console_without_message "irb"

    message "Yours might look different, but it should look something like this:"

    console_without_message "irb(main):001:0>"
  end

  step do
    message "Next try some simple math that's built into Ruby. Type these lines into IRB:"
    irb_command "3 + 3", "7 * 6"
  end

  step do
    message "**Variables** are names with values assigned to them."

    irb_command "my_variable = 5"

    message "This assigns the value `5` to the name `my_variable`."
  end

  step do
    message "You can also do math with variables:"
    irb_command "my_variable + 2", "my_variable * 3"
  end

  step do
    message "Variables can also hold more than one value. This is called an **array**."

    irb_command 'fruits = ["kiwi", "strawberry", "plum"]'

    message "Here we're using the variable `fruits` to hold a collection of fruit names."
  end

  step do
    irb_command 'fruits = fruits + ["orange"]', 'fruits = fruits - ["kiwi"]'
    message "`+` and `-` are called operators. We can use them with the array of fruits just like we can use them with numbers."
  end

  step do
    message "Everything in Ruby has a **class**. Type this into IRB:"

    irb_command "7.class", '"kiwi".class', 'fruits.class'

    message "These are the three data types introduced so far: **Fixnum** (numbers), **String** (text), and **Array** (lists)."
  end

  step do
    message "Each class has different **methods** that can be used on **instances** of that class."
    irb_command 'fruits.length', 'fruits.first'

    message "You can see all the methods available for an object:"
    irb_command 'fruits.methods'

    message "And **chain** methods together:"
    irb_command 'fruits.methods.sort'
  end

  step do
    message "Arrays have a method called **each** which iterates through the list running code on each item."
    irb_command <<-RUBY
fruits.each do |fruit|
  puts fruit
end
    RUBY

    message "This takes the first item from the `fruits` array (`\"kiwi\"`), assigns it to the variable `fruit`, and runs the code between `do` and `end`. Then it does the same thing for each other item in the list. The code above should print a list of the fruits."
  end

  step do
    message "A **conditional** runs code only when a statement evaluates to true."

    irb_command <<-RUBY
if my_variable > 1
  puts "YAY!"
end
    RUBY

    message "This prints `YAY!` if the value stored in `my_variable` is greater than 1."

    message "Try changing the `>` in the conditional to a `<`."
  end

  step do
    message "You can also make your own methods:"
    irb_command <<-RUBY
def pluralize(word)
  word + "s"
end
pluralize("kiwi")
    RUBY

    message "Methods take **arguments**, which are the variables they work on. In this case, we made a method called `pluralize` that takes one argument, a word."

    message "Methods can also return data. In this case, `pluralize` returns the word with an 's' added to the end of it. In Ruby, methods return whatever the last line of the method evaluates to."
  end
end

next_step "getting_started"
