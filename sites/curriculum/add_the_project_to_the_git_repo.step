
goals do
  goal "The previous step didn't do anything with our application. It is time to add all the files to the repo now."
end

steps do

  step do
    console "git status"

    message "`git status` tells you everything git sees as modified, new, or missing."
  message "The first time you run this, you should see a ton of stuff."
  message "The second time you run this, you shouldn't see much of anything."
  end

  step do
    console "git add ."
    message "`git add .` tells git that you want to add the current directory (aka `.`) and everything under it to the repo."
  end

  step do
    console "git commit -m \"Added all the things\""
    message "`git commit` tells git to actually _do_ all things you've said you wanted to do."
    message "This is done in two steps so you can group multiple changes together."
    message "`-m \"Added all the things\"`  is just a shortcut to say what your commit message is. You can skip that part and git will bring up an editor to fill out a more detailed message."
  end
end

explanation do
  message <<-MARKDOWN
By checking your application into git now, you're creating a record of your starting point. Whenever you make a change during today's workshop, we'll add it to git before moving on. This way, if anything ever breaks, or you make a change you don't like. You can use git as an all-powerful "undo" technique. But that only works when you remember to commit early and often!
  MARKDOWN
end

next_step "running_your_application_locally"
