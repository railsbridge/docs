  model_diagram header: 'Topics', fields: %w(id title description)
  message "The suggestotron has a list of topics that people can vote on. We'll store our topics in the database."

goals do
  goal "Create a database table for topics with a title and a description"
  goal "Understand the MVC architecture:"
  ul do
    li "Model"
    li "View"
    li "Controller"
  end
end

steps do
  step do
    console "rails generate scaffold topic title:string description:text"
    message <<-MARKDOWN
* `generate scaffold` tells rails to create everything necessary to get up and running with topics.
* `topic` tells rails the name of the new model.
* `title:string` says that topics have a title, which is a string.
* `description:text` says that topics have a description which is a type of "text". Text allows you to enter more data than string.
    MARKDOWN
  end

  step do
    console "rake db:migrate"
    message "This tells rails to update the structure of the database to include a table for our new model."
  end
end

explanation {

  h2 "Rake"
  message <<-MARKDOWN
`rake` _(Ruby Make)_ is a tool that allows you to run small Ruby programs (**tasks**) that you use often in your application. Here, `rake db:migrate` is a task provided by the Rails framework.

You can run `rake -T` to see a list of all the `rake` commands your app currently responds to, along with a short description of each task.
  MARKDOWN

  h2 "Explaining MVC and Records"

  img src: "img/mvc.png", alt: "MVC"

  message "Rails implements a very specific notion of the **Model/View/Controller** pattern, which guides you in structuring your web applications."

  h3 "Model"
  message <<-MARKDOWN
* saves data to the database
* accesses data from the database
* bridges between the database and the rest of your application
  MARKDOWN

  h3 "View"
  message <<-MARKDOWN
* display the data for human (or machine) consumption
* views are your webpages
  MARKDOWN

  h3 "Controller"
  message <<-MARKDOWN
* acts as the glue between the models and the views
* combines data from multiple models
* summarizes and filters data
  MARKDOWN

  message <<-MARKDOWN
In MVC each component has very specific jobs.  Separating responsibilities like this makes it easy to maintain and extend rails applications.  When responsibilities become muddled it gets much harder to debug issues and add new functionality.
  MARKDOWN
}

next_step "CRUD_with_scaffolding"
