goals {
  goal "Now we're going to add a button people can click to cast a vote."
}

steps {

  step "Add the button to the view" do

    message "Edit `app/views/topics/index.html.erb` so that the bottom loop looks like this:"

    source_code :erb, <<-HTML
  <% @topics.each do |topic| %>
    <tr>
      <td><%= topic.title %></td>
      <td><%= topic.description %></td>
      <td><%= pluralize(topic.votes.length, "vote") %></td>
      <td><%= button_to '+1', votes_path(topic), method: :post %></td>
      <td><%= link_to 'Show', topic %></td>
      <td><%= link_to 'Edit', edit_topic_path(topic) %></td>
      <td><%= link_to 'Destroy', topic, confirm: 'Are you sure?', method: :delete %></td>
    </tr>
  <% end %>
    HTML
  end

  step "Add the create method to the controller" do
    message "Add the following method to `Vote` in `app/controllers/votes_controller.rb`:"
    source_code :ruby, <<-RUBY
class VotesController < ApplicationController
  def create
    topic = Topic.find(params[:topic_id])
    vote = topic.votes.build
    vote.save!
    redirect_to(topics_path)
  end
end
    RUBY
  end

  step "Confirm your changes in the browser" do
    message "Go back to <http://localhost:3000/topics> and play."
    message "Revel in the fact that you didn't have to restart the server to see these changes. Hawt, no?"
  end
}

explanation {

  message "First we added this line to `app/views/topics/index.html.erb`"
  source_code :erb, <<-HTML
  <td><%= button_to '+1', votes_path(topic), method: :post %></td>
  HTML

  message <<-MARKDOWN
  * `button_to '+1'` creates an html button with the value '+1'
  * `votes_path(topic)` creates the right url for the action we want to invoke. In this case, we want to create a vote for the current topic.
  * `method: :post` ensures we do the create action of CRUD, not the read action.

  The changes we made to votes controller are a bit more complicated so let's work through them line by line.

  * topic = Topic.find(params[:topic_id])
    * Finds the topic in the database with that id and stores it in the variable 'topic'.
    * params[:topic_id] corresponds to the topic_id part of the votes_path above (eg `?topic_id=42`).
  * `vote = topic.votes.build` creates a new vote for the current topic.
  * `vote.save!` saves the vote to the database.
  * `redirect_to(topics_path)` tells the browser to go back to topics_path (the topics list).
  MARKDOWN
}

next_step "commit_and_push_to_heroku_again"
