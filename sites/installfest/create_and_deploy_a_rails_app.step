step "Change to your home directory" do
  option "Windows" do
    console "cd c:\\Sites"
  end
  option "Mac or Linux" do
    console "cd ~"
  end
end

step "Create a new Rails app" do

  console "rails new test_app"

  message "The command's output is voluminous. :-)"

  console "cd test_app"
  console "rails server"

  tip "Shortcut: Just type 'rails s'" do
    message <<-MARKDOWN
Throughout your Rails programming career you're going to type `rails server` a
lot.  In fact, you'll type this so much that DHH and the Rails Core team
decided to save you 5 keystrokes per server restart.  Simply typing `rails s`
is the same as `rails server`.
  MARKDOWN
  end

  message <<-MARKDOWN
The first command should produce no output.
If "rails server" starts up with no errors, you're golden! It'll look something like this:
  MARKDOWN

  result <<-TEXT
=> Booting WEBrick
=> Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2010-09-30 21:04:12] INFO  WEBrick 1.3.1
[2010-09-30 21:04:12] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-30 21:04:12] INFO  WEBrick::HTTPServer#start: pid=24805 port=3000
  TEXT

message "If it does, congratulations! You've successfully installed Ruby AND Rails and started your server."

tip "If it doesn't work..." do
  link "diagnostics_for_windows"
  link "diagnostics_for_rvm"
end

message <<-MARKDOWN

* In your browser, go to <http://localhost:3000>

![Successful Rails Install](successful-rails-install.jpg)

* Back in the Terminal window where you ran <code>rails server</code>, type **Control-C** to kill(stop) the server.

  MARKDOWN
  todo "What is Control-C?"
  end

step "Generate a database model" do

  console <<-BASH
cd test_app
rails generate scaffold user name:string email:string address:text active:boolean
rake db:migrate
rails server
  BASH

  message "In the browser, visit <http://localhost:3000/users>"

  message "Click *New user* to create a user to make sure we can save to the database. (The window where you ran `rails server` will display debugging information as you do so.)"

  message "In your Terminal window where you ran `rails server`, type Control-C to kill(stop) the server."

end

step "Use git" do

  console <<-BASH
cd test_app
git init
  BASH

  result "Initialized empty Git repository in c:/Sites/test_app/.git/"

  console "git add ."
  important "Note that there is a single dot at the end of that command!"

  console "git commit -m \"initial commit\""
  result "a lot of lines like create mode 100644 README"

  console "git log"
  result "(Your git name and \"initial commit\" message.)"
end

step "Deploy your app to Heroku" do

  link "create_a_heroku_account"

  step "Create a Heroku application from this local Rails application." do

  message "The very first time you use `heroku` you must enter your Heroku email address and password."

  console "heroku create --stack cedar"
  result <<-OUTPUT
Enter your Heroku credentials.
Email: myemail@example.com
Password:
Uploading ssh public key /Users/smei/.ssh/id_rsa.pub
Created http://floating-winter-18.heroku.com/ | git@heroku.com:floating-winter-18.git
Git remote heroku added
  OUTPUT

  console "git remote show"
  result "heroku"

  message "If you get messages here complaining about public keys it's probably due to some confusion with SSH key usage by another app on your computer.  Call a volunteer over to help you figure it out.  Luckily this only needs to be done the first time you create a Heroku app."
  end

  step "Prepare your rails app for deploying to Heroku" do
    message <<-MARKDOWN

Find your test_app and open it in a text-editor.
Inside, find a file named Gemfile.
Edit your Gemfile and change the line:

    gem 'sqlite3'

To this:

    group :development, :test do
      gem 'sqlite3'
    end
    group :production do
      gem 'pg'
    end

    MARKDOWN

    console <<-BASH
bundle install --without production
    BASH

    message "if this fails, edit `config/environments/production.rb` "
  end

  step "Add the changes to git" do

    console <<-BASH
git add .
git commit -m "Updates for heroku deployment"
    BASH
  end

  step "Deploy (push) to heroku" do

    console "git push heroku master"

    message "It may ask: \"The authenticity of host 'heroku.com (75.101.145.87)' can't be established. RSA key fingerprint is 8b:48:5e:67:0e:c9:16:47:32:f2:87:0c:1f:c8:60:ad. Are you sure you want to continue connecting (yes/no)?\" Type <code>yes</code> and hit *<enter>*."

    result <<-OUTPUT
The authenticity of host 'heroku.com (75.101.145.87)' can't be established.
RSA key fingerprint is 8b:48:5e:67:0e:c9:16:47:32:f2:87:0c:1f:c8:60:ad.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'heroku.com,75.101.145.87' (RSA) to the list of known hosts.
Counting objects: 60, done.
Compressing objects: 100% (54/54), done.
Writing objects: 100% (60/60), 79.03 KiB, done.
Total 60 (delta 10), reused 0 (delta 0)

-----> Heroku receiving push
-----> Rails app detected
       Compiled slug size is 080K
-----> Launching...... done
       App deployed to Heroku

To git@heroku.com:floating-winter-18.git
 * [new branch]      master -> master
    OUTPUT

    important "Be sure to find and learn your Heroku application name in the output."

    message "[What to do if git seems stuck](what_to_do_if_git_seems_stuck)"

    console "heroku run rake db:migrate"

    result <<-OUTPUT
Running rake db:migrate attached to terminal... up, run.1
Migrating to CreateUsers (20111204065949)
==  CreateUsers: migrating ====================================================
-- create_table(:users)
   -> 0.0122s
==  CreateUsers: migrated (0.0123s) ===========================================
    OUTPUT

    message "The long number after CreateUsers is a timestamp. Yours will be different!"
  end

  step "Visit your new application" do

    message "In the browser, go to your application's URL. You'll need your Heroku application name."

    tip "To find your Heroku application name" do
      console "heroku info"
    end

    message "The URL for your app is <code>*application name*.heroku.com</code> -- so with the example output in the previous step, it would be <code>floating-winter-18.heroku.com</code>. Verify you see the welcome page. Leave this browser window open."

    tip "To quickly open your heroku application in a browser" do
      console "heroku open"
    end

    message "In the browser, add <code>/users</code> to the end of the URL. Verify you see the user list page."

    message "Create a new user to verify you can write to the database on Heroku."

  end
end

next_step "get_a_sticker"

